# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
    
    # - name: Copy Coverage to Predictable Location
    #  run: cp coverage/*/coverage.cobertura.xml coverage/coverage.cobertura.xml
    
    # - name: Code Coverage Summary Report
    #  uses: irongut/CodeCoverageSummary@v1.3.0
    #  with:
    #    filename: coverage/coverage.cobertura.xml
    #    badge: true
    #    format: markdown
    #    output: both
    
    # coverage.cobertura.xml
    - name: Create Code Coverage Report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:coverage/** -targetdir:coverage/ -reporttypes:'Cobertura'
        
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3

    - name: Write to Job Summary
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
